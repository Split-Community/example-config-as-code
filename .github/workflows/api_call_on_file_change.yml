name: API Call on File Change

on:
  push:
    branches:
      - main  # Change this to your branch name

jobs:
  api_call_job:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Code
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0

      - name: Get Changed Files
        id: changed_files
        run: |
          # Get a list of changed files in the push event
          changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }})
          echo "::set-output name=files::$changed_files"




      - name: Make API Calls for Changed Files
        id: api_calls
        run: |
          changed_files="${{ steps.changed_files.outputs.files }}"
          
          # Use the repository secret in your script
          api_key=${{ secrets.API_KEY }}  # This retrieves the value of the API_KEY secret
          
          # Loop through the changed files and make API calls for each one
          for file in $changed_files; do
            content=$(cat "$file")
            flagName="${file:0: -5}"
            # Modify the following line to use your API endpoint and method
            response=$(curl --location --request PUT 'https://api.split.io/internal/api/v2/splits/ws/$WORKSPACE_ID/$flagName/environments/$PROD_ENV'  --header 'Content-Type: application/json' --header 'Authorization: Bearer ${{ secrets.API_KEY }}' --data "$content")
            echo "API response for $file: $response"
          done
